{
  "deit_tiny_2025-06-13T17:20:32.423190": {
    "experiment_name": "deit_tiny_distill_resnet50",
    "student_model": "deit_tiny",
    "status": "failed",
    "error": "ValueError raised while resolving interpolation: HydraConfig was not set\n    full_key: dataset.path\n    object_type=dict"
  },
  "deit_tiny_2025-06-13T17:31:58.119189": {
    "experiment_name": "deit_tiny_distill_resnet50",
    "student_model": "deit_tiny",
    "status": "failed",
    "error": "Weights only load failed. This file can still be loaded, to do so you have two options, \u001b[1mdo those steps only if you trust the source of the checkpoint\u001b[0m. \n\t(1) In PyTorch 2.6, we changed the default value of the `weights_only` argument in `torch.load` from `False` to `True`. Re-running `torch.load` with `weights_only` set to `False` will likely succeed, but it can result in arbitrary code execution. Do it only if you got the file from a trusted source.\n\t(2) Alternatively, to load with `weights_only=True` please check the recommended steps in the following error message.\n\tWeightsUnpickler error: Unsupported global: GLOBAL omegaconf.listconfig.ListConfig was not an allowed global by default. Please use `torch.serialization.add_safe_globals([omegaconf.listconfig.ListConfig])` or the `torch.serialization.safe_globals([omegaconf.listconfig.ListConfig])` context manager to allowlist this global if you trust this class/function.\n\nCheck the documentation of torch.load to learn more about types accepted by default with weights_only https://pytorch.org/docs/stable/generated/torch.load.html."
  },
  "deit_tiny_2025-06-13T17:33:02.837679": {
    "experiment_name": "deit_tiny_distill_resnet50",
    "student_model": "deit_tiny",
    "status": "failed",
    "error": "Key 'loss' is not in struct\n    full_key: loss\n    object_type=dict"
  },
  "deit_tiny_2025-06-13T17:34:07.525401": {
    "experiment_name": "deit_tiny_distill_resnet50",
    "student_model": "deit_tiny",
    "status": "failed",
    "error": "`self.log(config/student_model, deit_tiny)` was called, but `str` values cannot be logged"
  },
  "deit_tiny_2025-06-13T17:35:18.441564": {
    "experiment_name": "deit_tiny_distill_resnet50",
    "student_model": "deit_tiny",
    "status": "failed",
    "error": "`self.log(config/student_model, deit_tiny)` was called, but `str` values cannot be logged"
  },
  "deit_tiny_2025-06-13T17:39:14.697140": {
    "experiment_name": "deit_tiny_distill_resnet50",
    "student_model": "deit_tiny",
    "status": "failed",
    "error": "Key 'optimizer' is not in struct\n    full_key: optimizer\n    object_type=dict"
  },
  "deit_tiny_2025-06-13T17:43:26.558196": {
    "experiment_name": "deit_tiny_distill_resnet50",
    "student_model": "deit_tiny",
    "status": "failed",
    "error": "VisionTransformerBase.get_parameter_groups() takes from 1 to 3 positional arguments but 4 were given"
  },
  "deit_tiny_2025-06-13T17:50:23.709132": {
    "experiment_name": "deit_tiny_distill_resnet50",
    "student_model": "deit_tiny",
    "status": "failed",
    "error": "name 'teacher_checkpoint' is not defined"
  },
  "deit_tiny_2025-06-13T17:53:56.976943": {
    "experiment_name": "deit_tiny_distill_resnet50",
    "student_model": "deit_tiny",
    "teacher_checkpoint": "checkpoints/best/resnet50-best.ckpt",
    "status": "success",
    "val_acc": 0.0,
    "test_acc": 0.8235294222831726,
    "best_epoch": 2,
    "teacher_agreement": 0.0,
    "final_alpha": 0.7
  },
  "deit_tiny_2025-06-13T17:56:48.465871": {
    "experiment_name": "deit_tiny_distill_resnet50",
    "student_model": "deit_tiny",
    "teacher_checkpoint": "checkpoints/best/resnet50-best.ckpt",
    "status": "success",
    "val_acc": 0.6911764740943909,
    "test_acc": 0.6764705777168274,
    "best_epoch": 0,
    "teacher_agreement": 0.6029411554336548,
    "final_alpha": 0.7
  }
}